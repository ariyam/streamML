/*
 * Based on the following paper:
 * P. Domingos and G. Hulten,  
 * "Mining  high-speed  data  streams",  
 * In  Proceedings  of  the  ACM  SIGKDD 2000. 
 * 
 * Description:
 * Synthetic data generation following the guidelines in the paper:
 * - Training examples generated by sampling uniformly from instance space.
 * - Assign classes according to the synthetic concept (randomly created decision tree).
 * - Perturb the data with different noise levels.
 * 
 * @author: Ariyam Das
 */

import java.util.ArrayList;
import java.util.Random;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

public class SyntheticDataGeneration {
	
	final private int NO_OF_DIM = 100;
	final private int MAX_ATTR_VAL = 2;
	
	private double conv_factor;
	private double noise;
	private long tree_size;
	private long leaves;
	private SyntheticConcept target;
	private String output_filename;
	
	//data generation parameters - conversion factor (f) and noise level
	public SyntheticDataGeneration(double f, double noise_level, int num_pts)
	{
		this.conv_factor = f;
		this.noise = noise_level;
		
		//pool of 100 binary attributes
		ArrayList<Integer> pool = new ArrayList<Integer>();
		for(int i=0; i<NO_OF_DIM; i++)
			pool.add(i);
				
		target = new SyntheticConcept(0,pool,conv_factor);
		
		this.tree_size = target.countNodes();
		this.leaves = target.countLeaves();
		
		output_filename = "data/"+f+"_"+noise_level+"_"+tree_size+"_"+leaves+".dat";
		generateDataFile(num_pts);
	}
	
	public String generateRandomTrainingInstance()
	{
		Random rand = new Random();
		int point[] = new int[NO_OF_DIM+1];
		
		for(int i=0; i<NO_OF_DIM; i++)	//assign attribute values
			point[i] = rand.nextInt(MAX_ATTR_VAL);
		
		if(Math.random() < noise)
			point[NO_OF_DIM] = target.randomClassify(); //class affected by noise
		else
			point[NO_OF_DIM] = target.classify(point);	//assign class
		
		for(int i=0; i<NO_OF_DIM; i++)
			if(Math.random() < noise)
				point[i] = rand.nextInt(MAX_ATTR_VAL);	//attribute values affected by noise
		
		String string = ""+point[0];
		for(int i=1; i<point.length; i++)
		{
			string += "," + point[i];
		}
		return string;	
	}
	
	public void generateDataFile(int num_points)
	{
		try 
    	{
			BufferedWriter out = new BufferedWriter(new FileWriter(output_filename,true));
			for(int x=0; x<num_points; x++)
			{
				String text = generateRandomTrainingInstance();
	    		out.append(text+"\n");	
			}
    		out.close();
    	}
    	catch ( IOException e )
    	{
    		e.printStackTrace();
    	}
	}
	
	
	public static void main(String args[]) 
	{
		//<f, noise level, #points>
		new SyntheticDataGeneration(0.15,0,100000);
	}
}
